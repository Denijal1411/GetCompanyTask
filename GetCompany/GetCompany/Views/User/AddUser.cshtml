@model GetCompany.Models.CreateUserModel
@{
    ViewBag.Title = "AddUser";
    var rolesEnum = GetCompany.Code.Roles.GetIDRolesString();
}

@using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { @class = "form-horizontal" }))
{
<div class="form-group row">
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control mb-2", placeholder = "Name:" }) 
        @Html.ValidationMessageFor(x => x.Name,"", new {  @class="errorMessage"}) 
    </div>
    <div class="form-group row">
        @Html.TextBoxFor(x => x.Surname, new { @class = "form-control mb-2", placeholder = "Surname:" })
        @Html.ValidationMessageFor(x => x.Surname, "", new { @class = "errorMessage" })
    </div>
    <div class="form-group row">
        @Html.TextBoxFor(x => x.UserName, new { @class = "form-control mb-2", placeholder = "Username:" })
        @Html.ValidationMessageFor(x => x.UserName, "", new { @class = "errorMessage" })
    </div>
    <div class="form-group row">
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control mb-2", placeholder = "e-mail:" })
        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "errorMessage" })
    </div>
    <div class="form-group row">
        @Html.TextBoxFor(x => x.Password, new { @class = "form-control mb-2", placeholder = "Password:" })
        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "errorMessage" })
    </div>
    <div class="form-group row">
        @Html.DropDownListFor(x => x.IDRole, new SelectList(rolesEnum).Select(p => new SelectListItem() { Text = p.Text.Split('-')[0], Value = p.Text.Split('-')[1] }), "Choose Role", new { @class = "mb-2" })
        @Html.ValidationMessageFor(x => x.IDRole, "", new { @class = "errorMessage" })
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Sign in</button>
        </div>
    </div>















    }

